1.使用老师的代码，sqoop增量导入成功，但是pwd文件使用vim去编辑会蜜汁失败。

2.装载表用的UDF函数可以直接拷贝老师的jar包，实测没有问题。

3.创建日期表只能在mysql中先建好，调用存储过程填充日期表，再用sqoop导入到hive中，再执行装载。（hive2.0以前的版本没有存储过程功能。）

4.使用udf装载维度表成功

5.傻逼才分桶，大伙要是分桶了趁早改回来，坑死人了，分桶就不能本地模式了。
alter table sales_dw.dim_order clustered by(order_sk) into 1 buckets

6.
维度表的SCD1更新策略：简单粗暴，先对比然后从ods中拿出变化的数据，然后把dw中的那部分数据删掉，再把变化的数据插入进去

维度表SCD2更新策略：首先先更新过期数据的过期时间，然后再基于过期时间插入新的未过期的数据
	一、更新过期数据的过期时间：
		1.sqoop覆盖导入有效数据到ods层的对应表中
		2.通过比对更新后的ods表，挑选出ods表没有的但是维度表中有的数据，将过期时间更新为${hivevar:pre_date}
		3.（顾客表）挑选出两表的顾客地址不一样的数据，将过期时间更新为${hivevar:pre_date}
		
	二、插入新数据：
		1.首先以刚才更新后的维度表为基础，拿出所有的过期数据 t1
		2.再将数据与ods层的源数据t2内连接
		3.最后t1的地址与t2的地址不一样的数据，就是我们要更新插入的最终数据了。
		
增量导入维度表策略：比起SCD策略来说要简单得多，从ods表中拿出以上次更新时间为下限，当前更新时间为上限的数据即可

7.${hivevar:pre_date}读取变量的操作发生在where之后，因此不能放在join on条件中，也不能放在分区条件中，可以使用动态分区来代替。

8.join on 不能放不等值比较。