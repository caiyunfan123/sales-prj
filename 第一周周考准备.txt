一、哪些表使用全量导入，哪些表使用增量导入
1.带有缓慢变化维的，随时更新的表使用全量导入
2.存储历史数据的表使用增量导入

二、增量导入的方式和注意点
1.lastmodified、append
2.导入时软件和硬件的环境要装好、覆盖导入时不指定临时目录、增量导入时必须指定目标目录和分桶字段

三、DW层包含哪些表，有何共通之处，如何设计这些表？
各维度表、一个主题一张事实表，事实表包含各维度表的代理主键sk和事实字段
维度表的设计遵从三范式、事实表的设计遵从星形模型

四、ODS-DW层数据load如何实现？代理主键SK如何获取？
1.预装载、加载数据到DW、装载SK代理主键、更新缓慢变化维表、增量导入历史数据表
2.row_number()函数与cross join结合使用维护最大值自增、自定义函数自增、直接使用表中的唯一字段。

五、ETL包含哪些阶段？ETL的T阶段如何实施？
0.包含数据清洗、数据抽取和转化、数据加载；
1.维护一个cdc_time表，用来记录本次增量时间（当前时间-1），过期时间
2.数据的标准化（IP解析）、脏数据清洗
3.
  数据同步：处理缓慢变化维度表，根据字段不同分别采用SCD1或SCD2的处理方式更新；
  处理历史数据表，从ods层中增量导入数据；
  处理事实表，从ods层中增量导入数据，再与各个维度表连接获取代理主键进行更新。

六、DM层的表如何设计？
主要根据各个维度表来设计，以时间周期为轴的设计方式有：
年、月、日各产品销售情况表、各顾客购买总量表、各时间点订单取消量等

七、版本管理工具有哪些？各有何特点？
svn:集中式管理工具，开发者本地没有版本库，只能从服务器获取。
git:分布式管理工具，开发者本地有手动同步的版本库，可以从服务器同步版本。

八、git的各个工具之间有什么关联？
git：所有版本管理工具的基础服务，必须具有git才能使用其他工具
github：一个
gitblit：局域网的git版本库管理工具
idea：通过git的接口封装了API从而可以进行代码上传的编译器
TotorsieGit：将git的各个功能封装成自动化实现的工具

九、销售案例包含哪些层，有何作用？
ODS层：全量或增量导入数据库更新的数据，为DW层的更新准备好数据
DW层：将ods层中的最新数据导入到各维度表，再将各维度表根据主题需求组合成多张事实表，减少DM层的join量。
DM层：存放各个主题的统计表

十、数据库-ODS的实施步骤有哪些？
1.建表，设置约束排除脏数据
2.具有缓慢变化维的随时更新的表要全量导入，存储历史数据的表则增量导入

十一、数仓的定义？
一个面向主题的、集成的、稳定的、随时间变化的数据集合，为决策者提供参考。
面向主题：根据设计的主旨设计指标，进而设计数据具体的存储表
集成：将零散、海量的数据集中起来
稳定：统计、计算的最终结果会被持久化
随时间变化：随着时间变化不断存储新的数据

十二、数仓和数据库的差异有哪些？
和数据库的关系？
差异项	          数据库							数据仓库
—————————————————————————————
特征			操作处理							信息处理
面向			事务									分析
用户			DBA、开发						经理、主管、分析人员
功能			日常操作							长期信息需求、决策支持
DB设计		基于ER模型，面向应用		星形/雪花模型，面向主题
数据			当前的、最新的					历史的、跨时间维护
汇总			原始的、高度详细				汇总的、统一的
视图			详细、一般关系					汇总的、多维的
工作单元	短的、简单事务					复杂查询
访问			读/写									大多为读
关注			数据进入							信息输出
操作			主键索引操作						大量的磁盘扫描
用户数		数百到数亿						数百
DB规模		GB到TB								>=TB
优先			高性能、高可用性				高灵活性
度量			事务吞吐量						查询吞吐量、响应时间

十四、大数据技术架构图，有哪些步骤？
数据采集层：数据源有日志、数据库、FTP服务器
----flume或sqoop----
数据存储于分析层：分为离线分析和实时计算两部分，实时计算包括kafka-spark模块，计算结果导入到hdfs中
离线分析主要是用mapreduce和spark做引擎的hive数仓管理
----sqoop导出DM的数据----
数据共享层：存放的位置有数据库、redis、hbase等
数据应用层：报表、接口、可视化等操作都是从数据共享层中拉取数据。

十五、数仓建模包括哪些步骤？
1.业务建模：根据业务需求确定数仓的主体和维度建模，基于ER
2.领域建模：将业务模型抽象化生成概念模型，主要表达各个业务需求
3.逻辑建模：将概念模型具体化，设计出各个业务需求的表
4.物理建模：将逻辑模型根据当前环境设计出最佳性价比的表设计

十六、模型的形状有哪些？
星形、星系、雪花

